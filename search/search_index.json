{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CDIPpy CDIPpy is python library for navigating and accessing products provided by the Coastal Data Information Program (CDIP) at Scripps Institution of Oceanography (SIO). It is a collection of utilities used within CDIP software operations that have useful potential for CDIP end-users as well. A goal of publishing this library as an open source, contributable package is to foster closer collaboration between CDIP and the coommunity of users. Navigating these docs The CDIP user community spans a brooad expertise and vastly different backgrounds in python development and usage - use the following guidelines to determine where to start in the documentation: If you a relatively comfortable working with python, visit the Quickstart Guide . If you would like more explicit, step by step instructions for: Using cdippy as an end user: see the Users Guide Making changes to cdippy : see the Developers Guide","title":"Home"},{"location":"#cdippy","text":"CDIPpy is python library for navigating and accessing products provided by the Coastal Data Information Program (CDIP) at Scripps Institution of Oceanography (SIO). It is a collection of utilities used within CDIP software operations that have useful potential for CDIP end-users as well. A goal of publishing this library as an open source, contributable package is to foster closer collaboration between CDIP and the coommunity of users.","title":"CDIPpy"},{"location":"#navigating-these-docs","text":"The CDIP user community spans a brooad expertise and vastly different backgrounds in python development and usage - use the following guidelines to determine where to start in the documentation: If you a relatively comfortable working with python, visit the Quickstart Guide . If you would like more explicit, step by step instructions for: Using cdippy as an end user: see the Users Guide Making changes to cdippy : see the Developers Guide","title":"Navigating these docs"},{"location":"quickstart/","text":"Installation To install CDIPpy locally, you can either 1. clone the repository, navigate to the root directory, and run pip install . or 2. without cloning the repositorym, install from github: pip install git+https://github.com/cdipsw/CDIPpy.git \ud83d\udea7 UNDER CONSTRUCTION \ud83d\udea7 TODO add test snippet to check installation here Development To set up a development copy of CDIPpy, install the project form source using uv : >>> pip install uv >>> uv venv >>> source activate .venv/bin/activate >>> uv pip install -e .[dev] This creates a local, virtual environment at ./.venv , and installs a version of CDIPpy that is editable ( -e ), along with several additional dev dependencies ( [dev] ). Testing This project uses python's built in unittest package. To run all tests: >>> python -m unittest discover To run with coverage : >>> coverage run -m unittest discover To view the coverage report: >>> coverage report Contributing Contributions are welcome and should be merged via pull request on the main branch from a forked repository. Before a PR can be merged, it needs to pass the following checks: all tests passed coverage >= threshhold passes flake8 linter there must be at least one reviewer approval a CLA must be signed by the contributor, if this is their first commit If you do not wish you manually check the style for every commit, there is a pre-commit hook that can do it for you. After setting up CDIPpy for development, install the hook with: pre-commit install . The installed hook will auto-format the files in your commit with black and checked for any remaining format errors with flake8 .","title":"Quick start"},{"location":"quickstart/#installation","text":"To install CDIPpy locally, you can either 1. clone the repository, navigate to the root directory, and run pip install . or 2. without cloning the repositorym, install from github: pip install git+https://github.com/cdipsw/CDIPpy.git \ud83d\udea7 UNDER CONSTRUCTION \ud83d\udea7 TODO add test snippet to check installation here","title":"Installation"},{"location":"quickstart/#development","text":"To set up a development copy of CDIPpy, install the project form source using uv : >>> pip install uv >>> uv venv >>> source activate .venv/bin/activate >>> uv pip install -e .[dev]","title":"Development"},{"location":"quickstart/#this-creates-a-local-virtual-environment-at-venv-and-installs-a-version-of-cdippy-that-is-editable-e-along-with-several-additional-dev-dependencies-dev","text":"","title":"This creates a local, virtual environment at ./.venv, and installs a version of CDIPpy that is editable (-e), along with several additional dev dependencies ([dev])."},{"location":"quickstart/#testing","text":"This project uses python's built in unittest package. To run all tests: >>> python -m unittest discover To run with coverage : >>> coverage run -m unittest discover To view the coverage report: >>> coverage report","title":"Testing"},{"location":"quickstart/#contributing","text":"Contributions are welcome and should be merged via pull request on the main branch from a forked repository. Before a PR can be merged, it needs to pass the following checks: all tests passed coverage >= threshhold passes flake8 linter there must be at least one reviewer approval a CLA must be signed by the contributor, if this is their first commit If you do not wish you manually check the style for every commit, there is a pre-commit hook that can do it for you. After setting up CDIPpy for development, install the hook with: pre-commit install . The installed hook will auto-format the files in your commit with black and checked for any remaining format errors with flake8 .","title":"Contributing"},{"location":"dev_guide/","text":"Installing CDIPpy for development This page contains instructions for CDIPpy users interested in customizing or contributiing to the library. Download from source Install with dev tools testing linting","title":"Installation"},{"location":"dev_guide/#installing-cdippy-for-development","text":"This page contains instructions for CDIPpy users interested in customizing or contributiing to the library.","title":"Installing CDIPpy for development"},{"location":"dev_guide/#download-from-source","text":"","title":"Download from source"},{"location":"dev_guide/#install-with-dev-tools","text":"","title":"Install with dev tools"},{"location":"dev_guide/#testing","text":"","title":"testing"},{"location":"dev_guide/#linting","text":"","title":"linting"},{"location":"dev_guide/contribute/","text":"Contributors guide welcome contributions! types on contributions workflow Setting up your git workflow Tips & tricks","title":"Contributing"},{"location":"dev_guide/contribute/#contributors-guide","text":"welcome contributions! types on contributions workflow","title":"Contributors guide"},{"location":"dev_guide/contribute/#setting-up-your-git-workflow","text":"","title":"Setting up your git workflow"},{"location":"dev_guide/contribute/#tips-tricks","text":"","title":"Tips &amp; tricks"},{"location":"examples/","text":"\ud83d\udea7 UNDER CONSTRUCTION \ud83d\udea7 This section is still being developed.","title":"Examples"},{"location":"examples/#under-construction","text":"This section is still being developed.","title":"\ud83d\udea7 UNDER CONSTRUCTION \ud83d\udea7"},{"location":"user_guide/","text":"CDIPpy end users guide This page contains instructions for CDIPpy users who just want to navigate, access, and visualize CDIP data products. Installation There are few options for installing CDIPpy : 1) Install from PyPI (easiest): \ud83d\udea7 UNDER CONSTRUCTION \ud83d\udea7 Publishing to PyPI would allow users to install with just `pip install cdippy 2) Install from source (for developing or local control of library): Pre-requisite: git must be installed The cdippy source code lives here . * Clone the repository: `git clone 3) Install from GitHub (easiest when package is not published) Pre-requisite: pip must be installed Contained in this library \ud83d\udea7 UNDER CONSTRUCTION \ud83d\udea7 TODO Work on a comprehensive list of tools/features/uses of this library","title":"Installation"},{"location":"user_guide/#cdippy-end-users-guide","text":"This page contains instructions for CDIPpy users who just want to navigate, access, and visualize CDIP data products.","title":"CDIPpy end users guide"},{"location":"user_guide/#installation","text":"There are few options for installing CDIPpy : 1) Install from PyPI (easiest): \ud83d\udea7 UNDER CONSTRUCTION \ud83d\udea7 Publishing to PyPI would allow users to install with just `pip install cdippy 2) Install from source (for developing or local control of library): Pre-requisite: git must be installed The cdippy source code lives here . * Clone the repository: `git clone 3) Install from GitHub (easiest when package is not published) Pre-requisite: pip must be installed","title":"Installation"},{"location":"user_guide/#contained-in-this-library","text":"\ud83d\udea7 UNDER CONSTRUCTION \ud83d\udea7 TODO Work on a comprehensive list of tools/features/uses of this library","title":"Contained in this library"},{"location":"user_guide/data_access/","text":"\ud83d\udea7 UNDER CONSTRUCTION \ud83d\udea7 This page is still being written.","title":"Data access"},{"location":"user_guide/data_access/#under-construction","text":"This page is still being written.","title":"\ud83d\udea7 UNDER CONSTRUCTION \ud83d\udea7"},{"location":"user_guide/plotting/","text":"\ud83d\udea7 UNDER CONSTRUCTION \ud83d\udea7 This page is still being written.","title":"Data visualization"},{"location":"user_guide/plotting/#under-construction","text":"This page is still being written.","title":"\ud83d\udea7 UNDER CONSTRUCTION \ud83d\udea7"}]}